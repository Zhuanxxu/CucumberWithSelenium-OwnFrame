# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: 
#  [workflow_dispatch]
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
#    - name: Validate Gradle wrapper
#      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
#      with:
#        arguments: build
#    - name: Install google chrome
#      run: |
#            chmod +x ./scripts/InstallChrome.sh
#                    ./scripts/InstallChrome.sh
    - name: Gradle Cache
      # You may pin to the exact commit or the version.
      # uses: burrunan/gradle-cache-action@5424817e64ccb6bf267f715f5a46de1bf777c633
      uses: burrunan/gradle-cache-action@v1
      with:
        gradle-version: 7.5.1
        
    - name : Gradle Build
      run: gradle build
      
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ./node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
      
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.5.1
    - run: npm install
    - run: npm run report
      
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-without-markdown
        path: |
          docs
          
    - name: Commit and push changes
      run: |
        git config --global user.name "Agute"
        git config --global user.email ${{ secrets.USER }}
        git add -A
        git commit -m "Report generated"
        git push


    
